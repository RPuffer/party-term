/* --------------------------------------------------------------------------------------------
 * Copyright (c) Remy Suen. All rights reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 * ------------------------------------------------------------------------------------------ */
'use strict';
Object.defineProperty(exports, "__esModule", { value: true });
const vscode_languageserver_1 = require("vscode-languageserver");
const dockerfile_ast_1 = require("dockerfile-ast");
class DockerSymbols {
    createSymbolInformation(name, textDocumentURI, range, kind) {
        return {
            name: name,
            location: {
                uri: textDocumentURI,
                range: range
            },
            kind: kind
        };
    }
    parseSymbolInformation(document, textDocumentURI) {
        let dockerfile = dockerfile_ast_1.DockerfileParser.parse(document.getText());
        let directive = dockerfile.getDirective();
        let symbols = [];
        if (directive !== null) {
            symbols.push(this.createSymbolInformation(directive.getName(), textDocumentURI, directive.getNameRange(), vscode_languageserver_1.SymbolKind.Property));
        }
        for (let instruction of dockerfile.getInstructions()) {
            symbols.push(this.createSymbolInformation(instruction.getInstruction(), textDocumentURI, instruction.getInstructionRange(), vscode_languageserver_1.SymbolKind.Function));
        }
        return symbols;
    }
}
exports.DockerSymbols = DockerSymbols;
